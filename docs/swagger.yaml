definitions:
  db.NewReport:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  db.UserJSON:
    properties:
      password:
        type: string
      pepper:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: maksymilian@cych.eu
    name: Maksymilian Cych
  description: API for Downdetector website
  title: Downtetector
  version: "1.0"
paths:
  /change-password:
    post:
      consumes:
      - application/json
      description: Allows an authenticated user to change their password.
      produces:
      - text/plain
      responses:
        "303":
          description: See Other
        "500":
          description: Internal Server Error
      summary: Change user password
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      description: |-
        Authenticate a user using their login credentials.
        Password: sha256(sha256(password + salt) + pepper)
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/db.UserJSON'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Authenticate user
      tags:
      - user
  /logout:
    get:
      description: Log out the currently authenticated user by invalidating the session.
      produces:
      - text/plain
      responses:
        "303":
          description: See Other
        "500":
          description: Internal Server Error
      summary: Log out user
      tags:
      - user
  /pepper:
    get:
      description: Generates and returns a one time salt used to login.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get one time salt
      tags:
      - user
  /reports:
    post:
      consumes:
      - application/json
      description: Adds a new report to the system
      parameters:
      - description: New Report
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/db.NewReport'
      produces:
      - text/plain
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Add a new report
      tags:
      - reports
  /reports/{id}:
    delete:
      description: Deletes a report from the system
      parameters:
      - description: Report ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Delete a report
      tags:
      - reports
    put:
      consumes:
      - multipart/form-data
      description: Edits the details of an existing report
      parameters:
      - description: Report ID
        in: path
        name: id
        required: true
        type: integer
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Content
        in: formData
        name: content
        required: true
        type: string
      - description: Is Solved
        in: formData
        name: isSolved
        required: true
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Edit an existing report
      tags:
      - reports
  /salt:
    get:
      description: Generates and returns a salt assigned to the user.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get user salt
      tags:
      - user
swagger: "2.0"
